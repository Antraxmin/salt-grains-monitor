name: Deploy to Salt Master

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Validate YAML files
      run: |
        python3 -c "
        import yaml, os, sys
        error_count = 0
        for root, dirs, files in os.walk('.'):
            for file in files:
                if file.endswith('.sls'):
                    path = os.path.join(root, file)
                    try:
                        with open(path, 'r') as f:
                            yaml.safe_load(f)
                    except Exception as e:
                        print(f'ERROR: {path} - {e}')
                        error_count += 1
        if error_count > 0:
            sys.exit(1)
        "
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SALT_MASTER_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "${{ secrets.SALT_MASTER_HOST }}" >> ~/.ssh/known_hosts
        
    - name: Deploy
      run: |
        # 기존 파일 백업
        ssh -i ~/.ssh/id_rsa "${{ secrets.SALT_MASTER_USER }}"@"${{ secrets.SALT_MASTER_HOST }}" \
          "sudo mkdir -p /srv/backup/\$(date +%Y%m%d_%H%M%S) && \
           sudo cp -r /srv/salt /srv/backup/\$(date +%Y%m%d_%H%M%S)/ 2>/dev/null || true && \
           sudo mkdir -p /opt/salt-grains-monitor /srv/salt /srv/pillar"
        
        # 프로젝트 파일 동기화
        rsync -az --delete -e "ssh -i ~/.ssh/id_rsa" \
          --exclude='.git*' --exclude='README.md' \
          ./ "${{ secrets.SALT_MASTER_USER }}"@"${{ secrets.SALT_MASTER_HOST }}":/opt/salt-grains-monitor/
        
        # Salt 설정 적용 
        ssh -i ~/.ssh/id_rsa "${{ secrets.SALT_MASTER_USER }}"@"${{ secrets.SALT_MASTER_HOST }}" << 'EOF'
          cd /opt/salt-grains-monitor
          
          # Salt 파일 동기화 (디렉토리가 있을 때만)
          [ -d "srv/salt" ] && sudo rsync -av srv/salt/ /srv/salt/
          [ -d "srv/pillar" ] && sudo rsync -av srv/pillar/ /srv/pillar/
          [ -d "srv/reactor" ] && sudo rsync -av srv/reactor/ /srv/reactor/
          
          # 권한 설정
          sudo chown -R root:root /srv
          sudo find /srv -type f -exec chmod 644 {} \;
          sudo find /srv -type d -exec chmod 755 {} \;
          
          # Salt Master 재시작 + 테스트
          sudo systemctl reload salt-master
          sleep 5
          timeout 30 sudo salt '*' test.ping && timeout 60 sudo salt '*' state.apply grains-monitor || true
        EOF
        
    - name: Notify result
      if: always()
      run: |
        if [ "${{ secrets.DOORAY_WEBHOOK }}" != "" ]; then
          STATUS=$([ "${{ job.status }}" == "success" ] && echo "✅ 성공" || echo "❌ 실패")
          curl -X POST "${{ secrets.DOORAY_WEBHOOK }}" \
            -H 'Content-type: application/json' \
            --data "{\"text\": \"Salt Grains Monitor 배포 $STATUS\n커밋: \`${{ github.sha }}\`\n시간: $(date)\"}" || true
        fi